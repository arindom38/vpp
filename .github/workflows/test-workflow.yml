name: Test and Coverage

on:
  push:
    branches:
      - 'main'

permissions:
  contents: read
  packages: read
  actions: write

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Run Tests with Coverage
        run: |
          mvn -N wrapper:wrapper
          ./mvnw clean verify
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
        continue-on-error: true

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/
          retention-days: 7

      - name: Coverage Summary
        if: always()
        run: |
          echo "Coverage Summary:"
          COVERAGE_DATA=$(awk -F',' '
            NR>1 { 
                missed += $4; 
                covered += $5
            } 
            END { 
                total = covered + missed;
                if (total > 0) {
                    percentage = (covered / total) * 100;
                    printf "%.0f\n", percentage
                }
            }' target/site/jacoco/jacoco.csv)
        
          echo "Coverage: ${COVERAGE_DATA}%"
          if [ -z "$COVERAGE_DATA" ] || [ "$COVERAGE_DATA" -lt 70 ]; then
              echo "Coverage is below 70%"
              exit 1
          else
              echo "Coverage is adequate (${COVERAGE_DATA}%)"
          fi